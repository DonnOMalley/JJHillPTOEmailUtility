@model JJ_Hill_PTO_Email_Utility.Models.PTOEmail

@{
  ViewBag.Title = "JJ Hill PTO Email Utility";
}

<h2>JJ Hill PTO Email Utility</h2>


@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.EmailDomain, htmlAttributes: new { @class = "control-label" })
      @Html.EditorFor(model => model.EmailDomain, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.EmailDomain, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.EmailAPIKey, htmlAttributes: new { @class = "control-label" })
      @Html.EditorFor(model => model.EmailAPIKey, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.EmailAPIKey, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.FromAddress, htmlAttributes: new { @class = "control-label" })
      @Html.EditorFor(model => model.FromAddress, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.FromAddress, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.ToAddress, htmlAttributes: new { @class = "control-label" })
      @Html.EditorFor(model => model.ToAddress, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.ToAddress, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.bccAddresses, htmlAttributes: new { @class = "control-label" })
      @Html.EditorFor(model => model.bccAddresses, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.bccAddresses, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.EmailSubject, htmlAttributes: new { @class = "control-label" })
      @Html.EditorFor(model => model.EmailSubject, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.EmailSubject, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
      @Html.LabelFor(model => model.HtmlEmailMessage, htmlAttributes: new { @class = "control-label" })
      @Html.HiddenFor(model => model.EmailMessage)
      @Html.TextAreaFor(model => model.HtmlEmailMessage, new { @class = "form-control", @rows = "20", @cols = "220" })
      @Html.ValidationMessageFor(model => model.HtmlEmailMessage, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
      Attachments:
      <input type="button" name="AddAttachment" id="AddAttachment" value="Add Attachment " class="btn-default" />
      <div id="AttachmentList">

      </div>
    </div>

    <div class="form-group">
      <div class="col-sm-offset-7 col-lg-offset-8 col-md-offset-8 col-lg-10 col-md-10 col-sm-10">
        <input id="sendEmailsSubmit" type="submit" value="Send Emails" class="btn btn-default" />
      </div>
    </div>
  </div>
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
  <script type="text/javascript">
    $("#AddAttachment").on('click', function () {
      $.ajax({
        async: false,
        url: '/Home/AddAttachment',
        cache: false,
        success: function (partialView) {
          $('#AttachmentList').append(partialView);
        }
      });
      return false;
    });

    $('#HtmlEmailMessage').htmlarea({
      toolbar: [
                  ["p", "bold", "italic", "underline", "|", "unorderedList", "indent", "outdent"],
                  ["image", "link", "unlink"],
                  ["justifyleft", "justifycenter"]
      ]
    });

    $('#sendEmailsSubmit').click(function () {
      $('#EmailMessage').val($('#HtmlEmailMessage').htmlarea("toString"))
    })
  </script>
}